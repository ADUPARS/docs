(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{388:function(t,e,s){"use strict";s.r(e);var n=s(6),a=Object(n.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"using-and-creating-extensions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#using-and-creating-extensions","aria-hidden":"true"}},[t._v("#")]),t._v(" Using and Creating Extensions")]),t._v(" "),s("p",[t._v("Extensions are one of the most powerful features of Redux. Any part of Redux can be overloaded to do virtually\n"),s("strong",[s("em",[s("strong",[t._v("anything")])])]),t._v(" with extensions.")]),t._v(" "),s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("Table of Contents")]),t._v(" "),s("p",[s("TOC",{class:"table-of-contents",attrs:{"list-type":"ul","include-level":[2,3]}},[s("template",{slot:"header"}),s("template",{slot:"footer"})],2)],1)]),t._v(" "),s("div",{staticClass:"danger custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING: Extensions must be loaded BEFORE you use them")]),t._v(" "),s("p",[t._v("For the best result, always load your extension before you try using it in a config. Some extensions have custom APIs that\nwill not be included, and thus results can be poor. Always load extensions, "),s("strong",[t._v("then")]),t._v(" use them.")])]),t._v(" "),s("h2",{attrs:{id:"loading-an-extension"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#loading-an-extension","aria-hidden":"true"}},[t._v("#")]),t._v(" Loading an Extension")]),t._v(" "),s("p",[t._v("Using the Redux API, loading a single extension or a folder of extensions is trivial.")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[t._v("Redux"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("load_extensions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'OPT_NAME'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'RELATIVE_PATH_TO_DIRECTORY'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("That's it! Redux will recognize your extension(s) for your instance and you can use the added functionality in your declaration.")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("Make sure if you're including multiple extensions they are all in their own named folders within the directory you specify\nin order to load them all.")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("extensions/\n├── metaboxes/\n├── customizer/\n├── custom_field/\n    ├── extension_custom_field.php\n    ├── custom_field/\n        ├── field_custom_field.css\n        ├── field_custom_field.js\n        ├── field_custom_field.php\n")])])])]),t._v(" "),s("h2",{attrs:{id:"fetching-extensions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fetching-extensions","aria-hidden":"true"}},[t._v("#")]),t._v(" Fetching Extensions")]),t._v(" "),s("p",[t._v("Sometimes you need to fetch the existing extensions to identify what is being used.")]),t._v(" "),s("h3",{attrs:{id:"redux-getextensions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redux-getextensions","aria-hidden":"true"}},[t._v("#")]),t._v(" Redux::getExtensions()")]),t._v(" "),s("p",[t._v("This method requires one or two parameters depending on the desired return value.")]),t._v(" "),s("h4",{attrs:{id:"fetching-all-extensions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fetching-all-extensions","aria-hidden":"true"}},[t._v("#")]),t._v(" Fetching all Extensions")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[t._v("Redux"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getExtensions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$opt_name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("The return value will be an array of loaded extensions containing key/pair information of "),s("code",[t._v("path")]),t._v(" (the path to the extension) and "),s("code",[t._v("class")]),t._v(" (the classname of the extension). On failure, false is returned.")]),t._v(" "),s("h4",{attrs:{id:"fetching-a-single-extension"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fetching-a-single-extension","aria-hidden":"true"}},[t._v("#")]),t._v(" Fetching a Single Extension")]),t._v(" "),s("p",[t._v("To fetch the path of a single extension, use the following:")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[t._v("Redux"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getExtensions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$opt_name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'EXTENSION_NAME'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"creating-a-custom-extension"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-custom-extension","aria-hidden":"true"}},[t._v("#")]),t._v(" Creating a Custom Extension")]),t._v(" "),s("p",[t._v("Creating your own extension is very simple. In fact, if you want to change the way a Redux field works, you should\n"),s("strong",[t._v("always")]),t._v(" use an extension instead of modifying the core.")]),t._v(" "),s("p",[t._v("To really dig in, try it yourself using out "),s("a",{attrs:{href:"https://github.com/ReduxFramework/extension-boilerplate",target:"_blank",rel:"noopener noreferrer"}},[t._v("extension boilerplate"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"extension-folder-structure"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#extension-folder-structure","aria-hidden":"true"}},[t._v("#")]),t._v(" Extension Folder Structure")]),t._v(" "),s("p",[t._v("All extensions must follow a similar structure.")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("├── custom_field/\n    ├── extension_custom_field.php\n    ├── custom_field/\n        ├── field_custom_field.css\n        ├── field_custom_field.js\n        ├── field_custom_field.php\n        ├── field_custom_field.php\n")])])])])},[],!1,null,null,null);e.default=a.exports}}]);